{
  "name": "github-linker",
  "displayName": "GitHub Linker",
  "description": "Make and Open Links to GitHub repositories",
  "version": "0.0.14",
  "publisher": "manhen",
  "license": "MIT",
  "icon": "img/icon.png",
  "extensionDependencies": [
    "vscode.git"
  ],
  "author": {
    "name": "Manuel Hentschel"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ManuelHentschel/vscode-github-linker"
  },
  "bugs": {
    "url": "https://github.com/ManuelHentschel/vscode-github-linker/issues"
  },
  "engines": {
    "vscode": "^1.75.0"
  },
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "githubLinker.copyUrl",
        "title": "GitHub Linker: Copy GitHub link"
      },
      {
        "command": "githubLinker.openUrlInBrowser",
        "title": "GitHub Linker: Open GitHub link in browser"
      },
      {
        "command": "githubLinker.openFileFromUrl",
        "title": "GitHub Linker: Open local file from clipboard"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "githubLinker.copyUrl",
          "when": "config.githubLinker.showInContextMenu"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "githubLinker",
      "properties": {
        "githubLinker.showInContextMenu": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Whether to add githubLinker commands to the editor context menu."
        },
        "githubLinker.remoteUrl.useFetchUrl": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Whether to use the fetch url (true) or push url (false) of the repository."
        },
        "githubLinker.remoteUrl.remoteIds": {
          "type": "array",
          "items": {
            "type": [
              "string",
              "integer"
            ],
            "description": "Name of remote or numeric index."
          },
          "default": [
            0
          ],
          "markdownDescription": "Preferred names or numeric indices of remote to use, if there are multiple. First to match (either by name or existence of numeric index) is used."
        },
        "githubLinker.templates.oneLineNumber": {
          "type": "string",
          "markdownDescription": "The template used to construct the `${lineSpec}` in `#githubLinker.templates.githubUrl#`, if only one line is selected. Can reference `${line0}`.",
          "default": "#L${line0}"
        },
        "githubLinker.templates.twoLineNumbers": {
          "type": "string",
          "markdownDescription": "The template used to construct the `${lineSpec}` in `#githubLinker.templates.githubUrl#`, if two or more lines are selected. Can reference `${line0}`, `${line1}`.",
          "default": "#L${line0}-L${line1}"
        },
        "githubLinker.templates.githubUrl": {
          "type": "string",
          "markdownDescription": "The template used to construct the GitHub url. See README for details.",
          "default": "${repoUrl}/blob/${remoteHash}/${relativePath}${lineSpec}",
          "examples": [
            "${repoUrl}/blob/${remoteHash}/${relativePath}${lineSpec}",
            "Available Values:\n${path0}\n${repoUrl}\n${relativePath}\n${lineSpec}\n${localBranch}\n${remoteBranch}\n${localHash}\n${remoteHash}\n${tag}\n${tagOrBranch}\n${tagOrLocalHash}\n${tagOrRemoteHash}\n${remoteName}\n${line0}\n${line1}\n"
          ]
        },
        "githubLinker.patterns.githubUrl": {
          "type": "array",
          "markdownDescription": "Search-Replace patterns that are applied to the remote URL, when making a GitHub URL. Search patterns are passed to `Regexp()` first!",
          "items": {
            "type": "object",
            "title": "URL pattern",
            "properties": {
              "search": {
                "type": "string",
                "description": "The search pattern."
              },
              "replace": {
                "type": "string",
                "description": "The replacement string."
              }
            },
            "examples": [
              {
                "search": "\\.git$",
                "replace": ""
              },
              {
                "search": "^git@(.+):(.+)$",
                "replace": "https://$1/$2"
              }
            ]
          },
          "default": [
            {
              "search": "\\.git",
              "replace": ""
            },
            {
              "search": "^git@(.+):(.+)$",
              "replace": "https://$1/$2"
            }
          ]
        },
        "githubLinker.patterns.openFiles": {
          "type": "array",
          "markdownDescription": "Search-Replace patterns that are applied to the URL/path, when opening a file from the clipboard. Search patterns are passed to `Regexp()` first!",
          "items": {
            "type": "object",
            "title": "URL pattern",
            "properties": {
              "search": {
                "type": "string",
                "description": "The search pattern."
              },
              "replace": {
                "type": "string",
                "description": "The replacement string."
              }
            },
            "examples": [
              {
                "search": "^http.*/blob/[^/]*/",
                "replace": ""
              },
              {
                "search": "^\"(.*)\"",
                "replace": "$1"
              }
            ]
          },
          "default": [
            {
              "search": "^http.*/blob/[^/]*/",
              "replace": ""
            },
            {
              "search": "^\"(.*)\"",
              "replace": "$1"
            }
          ]
        },
        "githubLinker.patterns.lineNumbers": {
          "type": "array",
          "markdownDescription": "The regex pattern used to identify line numbers. Should contain one or two capture groups.",
          "items": {
            "type": "string",
            "title": "Line Pattern",
            "examples": [
              "#L(\\d+)[-:]L(\\d+)$",
              "#L(\\d+)$",
              "#(\\d+)[-:](\\d+)$",
              "#(\\d+)$"
            ]
          },
          "default": [
            "#L(\\d+)[-:]L?(\\d+)$",
            "#L(\\d+)$",
            "#(\\d+)[-:](\\d+)$",
            "#(\\d+)$"
          ]
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "tsc -p .",
    "compile": "tsc -p .",
    "lint": "eslint src --ext ts",
    "watch": "tsc --watch -p .",
    "pretest": "npm run compile && npm run lint",
    "test": "node ./out/test/runTest.js"
  },
  "bla": {
    "@types/node": "^13.13.27",
    "@types/vscode": "^1.71.0",
    "@typescript-eslint/eslint-plugin": "^4.6.1",
    "@typescript-eslint/parser": "^5.36.2",
    "eslint": "^7.12.1",
    "typescript": "^3.9.7"
  },
  "dependencies": {},
  "devDependencies": {
    "@types/node": "^18.7.16",
    "@types/vscode": "^1.50.0",
    "@typescript-eslint/eslint-plugin": "^5.36.2",
    "@typescript-eslint/parser": "^5.36.2",
    "eslint": "^8.23.0",
    "typescript": "^4.8.3"
  }
}
